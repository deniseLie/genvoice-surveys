"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("pages/index",{

/***/ "(pages-dir-browser)/./hooks/useAudioRecorder.js":
/*!***********************************!*\
  !*** ./hooks/useAudioRecorder.js ***!
  \***********************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   useAudioRecorder: () => (/* binding */ useAudioRecorder)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"(pages-dir-browser)/./node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\nvar _s = $RefreshSig$();\n\nconst useAudioRecorder = ()=>{\n    _s();\n    // STATE\n    const [recordingId, setRecordingId] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(null);\n    const [isRecording, setIsRecording] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(false);\n    //REF\n    const mediaRecorderRef = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(null);\n    const audioChunksRef = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)([]);\n    // Function : start recording\n    const startRecording = async (id)=>{\n        setRecordingId(id);\n        audioChunksRef.current = [];\n        try {\n            // request microphone access\n            const stream = await navigator.mediaDevices.getUserMedia({\n                audio: true\n            });\n            // Create MediaRecorder with options for better compatibility\n            const options = {\n                mimeType: 'audio/webm;codecs=opus',\n                audioBitsPerSecond: 128000\n            };\n            mediaRecorderRef.current = new MediaRecorder(stream, options);\n            // Data collection\n            mediaRecorderRef.current.ondataavailable = (e)=>{\n                if (e.data.size > 0) {\n                    audioChunksRef.current.push(e.data);\n                }\n            };\n            // Handle recording stop\n            mediaRecorderRef.current.onstop = ()=>{\n                try {\n                    // Create blob and URL\n                    const audioBlob = new Blob(audioChunksRef.current, {\n                        type: 'audio/webm'\n                    });\n                    // const audioUrl = URL.createObjectURL(audioBlob);\n                    // console.log(audioBlob, audioUrl);\n                    // Clean up media stream\n                    stream.getTracks().forEach((track)=>{\n                        track.stop();\n                        track.enabled = false;\n                    });\n                    return audioUrl;\n                } catch (e) {\n                    console.log('error creating audio url: ', e);\n                    return null;\n                }\n            };\n            // Recording start - collect data every 100ms\n            mediaRecorderRef.current.start(100);\n            setIsRecording(true);\n        } catch (err) {\n            console.error('Error accessing microphone:', err);\n            throw err;\n        }\n    };\n    // Function : Stop recording\n    const stopRecording = ()=>{\n        // if recording ongoing\n        if (mediaRecorderRef.current && isRecording) {\n            mediaRecorderRef.current.stop();\n            setIsRecording(false);\n            const audioUrl1 = mediaRecorderRef.current.onstop();\n            setRecordingId(null);\n            console.log(\"audioUrl\", audioUrl1);\n            return audioUrl1;\n        }\n        return null;\n    };\n    // Function : Play recorded audio of specific question\n    const playRecording = (id)=>{\n        if (audioRefs.current[id]) {\n            audioRefs.current[id].play();\n        }\n    };\n    return {\n        recordingId,\n        isRecording,\n        startRecording,\n        stopRecording,\n        playRecording\n    };\n};\n_s(useAudioRecorder, \"/gaZyn3JuGdDh2mF+baZ5FJzQuI=\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHBhZ2VzLWRpci1icm93c2VyKS8uL2hvb2tzL3VzZUF1ZGlvUmVjb3JkZXIuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUF5QztBQUVsQyxNQUFNRSxtQkFBbUI7O0lBRTVCLFFBQVE7SUFDUixNQUFNLENBQUNDLGFBQWFDLGVBQWUsR0FBR0osK0NBQVFBLENBQUM7SUFDL0MsTUFBTSxDQUFDSyxhQUFhQyxlQUFlLEdBQUdOLCtDQUFRQSxDQUFDO0lBRS9DLEtBQUs7SUFDTCxNQUFNTyxtQkFBbUJOLDZDQUFNQSxDQUFDO0lBQ2hDLE1BQU1PLGlCQUFpQlAsNkNBQU1BLENBQUMsRUFBRTtJQUVoQyw2QkFBNkI7SUFDN0IsTUFBTVEsaUJBQWlCLE9BQU9DO1FBQzFCTixlQUFlTTtRQUNmRixlQUFlRyxPQUFPLEdBQUcsRUFBRTtRQUUzQixJQUFJO1lBRUEsNEJBQTRCO1lBQzVCLE1BQU1DLFNBQVMsTUFBTUMsVUFBVUMsWUFBWSxDQUFDQyxZQUFZLENBQUM7Z0JBQUVDLE9BQU87WUFBSztZQUV2RSw2REFBNkQ7WUFDN0QsTUFBTUMsVUFBVTtnQkFDWkMsVUFBVTtnQkFDVkMsb0JBQW9CO1lBQ3hCO1lBQ0FaLGlCQUFpQkksT0FBTyxHQUFHLElBQUlTLGNBQWNSLFFBQVFLO1lBR3JELGtCQUFrQjtZQUNsQlYsaUJBQWlCSSxPQUFPLENBQUNVLGVBQWUsR0FBRyxDQUFDQztnQkFDeEMsSUFBSUEsRUFBRUMsSUFBSSxDQUFDQyxJQUFJLEdBQUcsR0FBRztvQkFDakJoQixlQUFlRyxPQUFPLENBQUNjLElBQUksQ0FBQ0gsRUFBRUMsSUFBSTtnQkFDdEM7WUFDSjtZQUVBLHdCQUF3QjtZQUN4QmhCLGlCQUFpQkksT0FBTyxDQUFDZSxNQUFNLEdBQUc7Z0JBQzlCLElBQUk7b0JBRUEsc0JBQXNCO29CQUN0QixNQUFNQyxZQUFZLElBQUlDLEtBQUtwQixlQUFlRyxPQUFPLEVBQUU7d0JBQUVrQixNQUFNO29CQUFhO29CQUN4RSxtREFBbUQ7b0JBRW5ELG9DQUFvQztvQkFFcEMsd0JBQXdCO29CQUN4QmpCLE9BQU9rQixTQUFTLEdBQUdDLE9BQU8sQ0FBQ0MsQ0FBQUE7d0JBQ3ZCQSxNQUFNQyxJQUFJO3dCQUNWRCxNQUFNRSxPQUFPLEdBQUc7b0JBQ3BCO29CQUVBLE9BQU9DO2dCQUNYLEVBQUUsT0FBT2IsR0FBRztvQkFDUmMsUUFBUUMsR0FBRyxDQUFDLDhCQUE4QmY7b0JBQzFDLE9BQU87Z0JBQ1g7WUFDSjtZQUVBLDZDQUE2QztZQUM3Q2YsaUJBQWlCSSxPQUFPLENBQUMyQixLQUFLLENBQUM7WUFDL0JoQyxlQUFlO1FBQ25CLEVBQUUsT0FBT2lDLEtBQUs7WUFDVkgsUUFBUUksS0FBSyxDQUFDLCtCQUErQkQ7WUFDN0MsTUFBTUE7UUFDVjtJQUNKO0lBRUEsNEJBQTRCO0lBQzVCLE1BQU1FLGdCQUFnQjtRQUVsQix1QkFBdUI7UUFDdkIsSUFBSWxDLGlCQUFpQkksT0FBTyxJQUFJTixhQUFhO1lBQ3pDRSxpQkFBaUJJLE9BQU8sQ0FBQ3NCLElBQUk7WUFDN0IzQixlQUFlO1lBRWYsTUFBTTZCLFlBQVc1QixpQkFBaUJJLE9BQU8sQ0FBQ2UsTUFBTTtZQUNoRHRCLGVBQWU7WUFFZmdDLFFBQVFDLEdBQUcsQ0FBQyxZQUFZRjtZQUN4QixPQUFPQTtRQUNYO1FBQ0EsT0FBTztJQUNYO0lBRUEsc0RBQXNEO0lBQ3RELE1BQU1PLGdCQUFnQixDQUFDaEM7UUFDbkIsSUFBSWlDLFVBQVVoQyxPQUFPLENBQUNELEdBQUcsRUFBRTtZQUN2QmlDLFVBQVVoQyxPQUFPLENBQUNELEdBQUcsQ0FBQ2tDLElBQUk7UUFDOUI7SUFDSjtJQUVBLE9BQU87UUFDSHpDO1FBQ0FFO1FBQ0FJO1FBQ0FnQztRQUNBQztJQUNKO0FBQ0osRUFBRTtHQWxHV3hDIiwic291cmNlcyI6WyJDOlxcRGVuaXNlXFxQcm9qZWN0XFxnZW52b2ljZS1zdXJ2ZXlzXFxmcm9udGVuZFxcaG9va3NcXHVzZUF1ZGlvUmVjb3JkZXIuanMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgdXNlU3RhdGUsIHVzZVJlZiB9IGZyb20gJ3JlYWN0JztcclxuXHJcbmV4cG9ydCBjb25zdCB1c2VBdWRpb1JlY29yZGVyID0gKCkgPT4ge1xyXG5cclxuICAgIC8vIFNUQVRFXHJcbiAgICBjb25zdCBbcmVjb3JkaW5nSWQsIHNldFJlY29yZGluZ0lkXSA9IHVzZVN0YXRlKG51bGwpO1xyXG4gICAgY29uc3QgW2lzUmVjb3JkaW5nLCBzZXRJc1JlY29yZGluZ10gPSB1c2VTdGF0ZShmYWxzZSk7XHJcblxyXG4gICAgLy9SRUZcclxuICAgIGNvbnN0IG1lZGlhUmVjb3JkZXJSZWYgPSB1c2VSZWYobnVsbCk7XHJcbiAgICBjb25zdCBhdWRpb0NodW5rc1JlZiA9IHVzZVJlZihbXSk7XHJcblxyXG4gICAgLy8gRnVuY3Rpb24gOiBzdGFydCByZWNvcmRpbmdcclxuICAgIGNvbnN0IHN0YXJ0UmVjb3JkaW5nID0gYXN5bmMgKGlkKSA9PiB7XHJcbiAgICAgICAgc2V0UmVjb3JkaW5nSWQoaWQpO1xyXG4gICAgICAgIGF1ZGlvQ2h1bmtzUmVmLmN1cnJlbnQgPSBbXTtcclxuICAgICAgICBcclxuICAgICAgICB0cnkge1xyXG4gICAgICAgICAgICBcclxuICAgICAgICAgICAgLy8gcmVxdWVzdCBtaWNyb3Bob25lIGFjY2Vzc1xyXG4gICAgICAgICAgICBjb25zdCBzdHJlYW0gPSBhd2FpdCBuYXZpZ2F0b3IubWVkaWFEZXZpY2VzLmdldFVzZXJNZWRpYSh7IGF1ZGlvOiB0cnVlIH0pO1xyXG5cclxuICAgICAgICAgICAgLy8gQ3JlYXRlIE1lZGlhUmVjb3JkZXIgd2l0aCBvcHRpb25zIGZvciBiZXR0ZXIgY29tcGF0aWJpbGl0eVxyXG4gICAgICAgICAgICBjb25zdCBvcHRpb25zID0ge1xyXG4gICAgICAgICAgICAgICAgbWltZVR5cGU6ICdhdWRpby93ZWJtO2NvZGVjcz1vcHVzJyxcclxuICAgICAgICAgICAgICAgIGF1ZGlvQml0c1BlclNlY29uZDogMTI4MDAwXHJcbiAgICAgICAgICAgIH07XHJcbiAgICAgICAgICAgIG1lZGlhUmVjb3JkZXJSZWYuY3VycmVudCA9IG5ldyBNZWRpYVJlY29yZGVyKHN0cmVhbSwgb3B0aW9ucyk7XHJcbiAgICAgICAgXHJcblxyXG4gICAgICAgICAgICAvLyBEYXRhIGNvbGxlY3Rpb25cclxuICAgICAgICAgICAgbWVkaWFSZWNvcmRlclJlZi5jdXJyZW50Lm9uZGF0YWF2YWlsYWJsZSA9IChlKSA9PiB7XHJcbiAgICAgICAgICAgICAgICBpZiAoZS5kYXRhLnNpemUgPiAwKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgYXVkaW9DaHVua3NSZWYuY3VycmVudC5wdXNoKGUuZGF0YSk7XHJcbiAgICAgICAgICAgICAgICB9ICAgXHJcbiAgICAgICAgICAgIH07XHJcblxyXG4gICAgICAgICAgICAvLyBIYW5kbGUgcmVjb3JkaW5nIHN0b3BcclxuICAgICAgICAgICAgbWVkaWFSZWNvcmRlclJlZi5jdXJyZW50Lm9uc3RvcCA9ICgpID0+IHtcclxuICAgICAgICAgICAgICAgIHRyeSB7XHJcblxyXG4gICAgICAgICAgICAgICAgICAgIC8vIENyZWF0ZSBibG9iIGFuZCBVUkxcclxuICAgICAgICAgICAgICAgICAgICBjb25zdCBhdWRpb0Jsb2IgPSBuZXcgQmxvYihhdWRpb0NodW5rc1JlZi5jdXJyZW50LCB7IHR5cGU6ICdhdWRpby93ZWJtJyB9KTtcclxuICAgICAgICAgICAgICAgICAgICAvLyBjb25zdCBhdWRpb1VybCA9IFVSTC5jcmVhdGVPYmplY3RVUkwoYXVkaW9CbG9iKTtcclxuXHJcbiAgICAgICAgICAgICAgICAgICAgLy8gY29uc29sZS5sb2coYXVkaW9CbG9iLCBhdWRpb1VybCk7XHJcblxyXG4gICAgICAgICAgICAgICAgICAgIC8vIENsZWFuIHVwIG1lZGlhIHN0cmVhbVxyXG4gICAgICAgICAgICAgICAgICAgIHN0cmVhbS5nZXRUcmFja3MoKS5mb3JFYWNoKHRyYWNrID0+IHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgdHJhY2suc3RvcCgpO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICB0cmFjay5lbmFibGVkID0gZmFsc2U7XHJcbiAgICAgICAgICAgICAgICAgICAgfSk7XHJcbiAgICAgICAgICAgICAgICAgICAgXHJcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGF1ZGlvVXJsO1xyXG4gICAgICAgICAgICAgICAgfSBjYXRjaCAoZSkge1xyXG4gICAgICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKCdlcnJvciBjcmVhdGluZyBhdWRpbyB1cmw6ICcsIGUpO1xyXG4gICAgICAgICAgICAgICAgICAgIHJldHVybiBudWxsO1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB9O1xyXG5cclxuICAgICAgICAgICAgLy8gUmVjb3JkaW5nIHN0YXJ0IC0gY29sbGVjdCBkYXRhIGV2ZXJ5IDEwMG1zXHJcbiAgICAgICAgICAgIG1lZGlhUmVjb3JkZXJSZWYuY3VycmVudC5zdGFydCgxMDApOyAgICBcclxuICAgICAgICAgICAgc2V0SXNSZWNvcmRpbmcodHJ1ZSk7XHJcbiAgICAgICAgfSBjYXRjaCAoZXJyKSB7XHJcbiAgICAgICAgICAgIGNvbnNvbGUuZXJyb3IoJ0Vycm9yIGFjY2Vzc2luZyBtaWNyb3Bob25lOicsIGVycik7XHJcbiAgICAgICAgICAgIHRocm93IGVycjtcclxuICAgICAgICB9IFxyXG4gICAgfTtcclxuXHJcbiAgICAvLyBGdW5jdGlvbiA6IFN0b3AgcmVjb3JkaW5nXHJcbiAgICBjb25zdCBzdG9wUmVjb3JkaW5nID0gKCkgPT4ge1xyXG5cclxuICAgICAgICAvLyBpZiByZWNvcmRpbmcgb25nb2luZ1xyXG4gICAgICAgIGlmIChtZWRpYVJlY29yZGVyUmVmLmN1cnJlbnQgJiYgaXNSZWNvcmRpbmcpIHtcclxuICAgICAgICAgICAgbWVkaWFSZWNvcmRlclJlZi5jdXJyZW50LnN0b3AoKTtcclxuICAgICAgICAgICAgc2V0SXNSZWNvcmRpbmcoZmFsc2UpO1xyXG5cclxuICAgICAgICAgICAgY29uc3QgYXVkaW9VcmwgPSBtZWRpYVJlY29yZGVyUmVmLmN1cnJlbnQub25zdG9wKCk7XHJcbiAgICAgICAgICAgIHNldFJlY29yZGluZ0lkKG51bGwpO1xyXG5cclxuICAgICAgICAgICAgY29uc29sZS5sb2coXCJhdWRpb1VybFwiLCBhdWRpb1VybClcclxuICAgICAgICAgICAgcmV0dXJuIGF1ZGlvVXJsO1xyXG4gICAgICAgIH1cclxuICAgICAgICByZXR1cm4gbnVsbDtcclxuICAgIH07XHJcblxyXG4gICAgLy8gRnVuY3Rpb24gOiBQbGF5IHJlY29yZGVkIGF1ZGlvIG9mIHNwZWNpZmljIHF1ZXN0aW9uXHJcbiAgICBjb25zdCBwbGF5UmVjb3JkaW5nID0gKGlkKSA9PiB7XHJcbiAgICAgICAgaWYgKGF1ZGlvUmVmcy5jdXJyZW50W2lkXSkge1xyXG4gICAgICAgICAgICBhdWRpb1JlZnMuY3VycmVudFtpZF0ucGxheSgpO1xyXG4gICAgICAgIH1cclxuICAgIH07XHJcblxyXG4gICAgcmV0dXJuIHtcclxuICAgICAgICByZWNvcmRpbmdJZCxcclxuICAgICAgICBpc1JlY29yZGluZyxcclxuICAgICAgICBzdGFydFJlY29yZGluZyxcclxuICAgICAgICBzdG9wUmVjb3JkaW5nLFxyXG4gICAgICAgIHBsYXlSZWNvcmRpbmdcclxuICAgIH07XHJcbn07Il0sIm5hbWVzIjpbInVzZVN0YXRlIiwidXNlUmVmIiwidXNlQXVkaW9SZWNvcmRlciIsInJlY29yZGluZ0lkIiwic2V0UmVjb3JkaW5nSWQiLCJpc1JlY29yZGluZyIsInNldElzUmVjb3JkaW5nIiwibWVkaWFSZWNvcmRlclJlZiIsImF1ZGlvQ2h1bmtzUmVmIiwic3RhcnRSZWNvcmRpbmciLCJpZCIsImN1cnJlbnQiLCJzdHJlYW0iLCJuYXZpZ2F0b3IiLCJtZWRpYURldmljZXMiLCJnZXRVc2VyTWVkaWEiLCJhdWRpbyIsIm9wdGlvbnMiLCJtaW1lVHlwZSIsImF1ZGlvQml0c1BlclNlY29uZCIsIk1lZGlhUmVjb3JkZXIiLCJvbmRhdGFhdmFpbGFibGUiLCJlIiwiZGF0YSIsInNpemUiLCJwdXNoIiwib25zdG9wIiwiYXVkaW9CbG9iIiwiQmxvYiIsInR5cGUiLCJnZXRUcmFja3MiLCJmb3JFYWNoIiwidHJhY2siLCJzdG9wIiwiZW5hYmxlZCIsImF1ZGlvVXJsIiwiY29uc29sZSIsImxvZyIsInN0YXJ0IiwiZXJyIiwiZXJyb3IiLCJzdG9wUmVjb3JkaW5nIiwicGxheVJlY29yZGluZyIsImF1ZGlvUmVmcyIsInBsYXkiXSwiaWdub3JlTGlzdCI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(pages-dir-browser)/./hooks/useAudioRecorder.js\n"));

/***/ })

});