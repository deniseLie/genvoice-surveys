"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("pages/index",{

/***/ "(pages-dir-browser)/./hooks/useAudioRecorder.js":
/*!***********************************!*\
  !*** ./hooks/useAudioRecorder.js ***!
  \***********************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   useAudioRecorder: () => (/* binding */ useAudioRecorder)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"(pages-dir-browser)/./node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\nvar _s = $RefreshSig$();\n\nconst useAudioRecorder = ()=>{\n    _s();\n    // STATE\n    const [recordingId, setRecordingId] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(null);\n    const [isRecording, setIsRecording] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(false);\n    //REF\n    const mediaRecorderRef = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(null);\n    const audioChunksRef = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)([]);\n    // Function : start recording\n    const startRecording = async (id)=>{\n        setRecordingId(id);\n        audioChunksRef.current = [];\n        try {\n            // request microphone access\n            const stream1 = await navigator.mediaDevices.getUserMedia({\n                audio: true\n            });\n            // Create MediaRecorder with options for better compatibility\n            const options = {\n                mimeType: 'audio/webm;codecs=opus',\n                audioBitsPerSecond: 128000\n            };\n            mediaRecorderRef.current = new MediaRecorder(stream1, options);\n            // Collect data chunks\n            mediaRecorderRef.current.ondataavailable = (e)=>{\n                if (e.data.size > 0) {\n                    audioChunksRef.current.push(e.data);\n                }\n            };\n            // Recording start - collect data every 100ms\n            mediaRecorderRef.current.start(100);\n            setIsRecording(true);\n        } catch (err) {\n            console.error('Error accessing microphone:', err);\n            throw err;\n        }\n    };\n    // Function : Stop recording\n    const stopRecording = ()=>{\n        let blob;\n        // if recording ongoing\n        if (mediaRecorderRef.current && isRecording) {\n            // Handle recording stop\n            blob = mediaRecorderRef.current.onstop = ()=>{\n                try {\n                    // Create blob and URL\n                    const audioBlob = new Blob(audioChunksRef.current, {\n                        type: 'audio/webm'\n                    });\n                    // const audioUrl = URL.createObjectURL(audioBlob);\n                    // console.log(audioBlob, audioUrl);\n                    // Clean up media stream\n                    stream.getTracks().forEach((track)=>{\n                        track.stop();\n                        track.enabled = false;\n                    });\n                    return audioBlob;\n                } catch (e) {\n                    console.log('error creating audio url: ', e);\n                    return null;\n                }\n            };\n            // Stop recording\n            mediaRecorderRef.current.stop();\n            setIsRecording(false);\n            setRecordingId(null);\n            console.log(\"blob\", blob);\n            return blob;\n        }\n        return null;\n    };\n    return {\n        recordingId,\n        isRecording,\n        startRecording,\n        stopRecording\n    };\n};\n_s(useAudioRecorder, \"/gaZyn3JuGdDh2mF+baZ5FJzQuI=\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHBhZ2VzLWRpci1icm93c2VyKS8uL2hvb2tzL3VzZUF1ZGlvUmVjb3JkZXIuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUF5QztBQUVsQyxNQUFNRSxtQkFBbUI7O0lBRTVCLFFBQVE7SUFDUixNQUFNLENBQUNDLGFBQWFDLGVBQWUsR0FBR0osK0NBQVFBLENBQUM7SUFDL0MsTUFBTSxDQUFDSyxhQUFhQyxlQUFlLEdBQUdOLCtDQUFRQSxDQUFDO0lBRS9DLEtBQUs7SUFDTCxNQUFNTyxtQkFBbUJOLDZDQUFNQSxDQUFDO0lBQ2hDLE1BQU1PLGlCQUFpQlAsNkNBQU1BLENBQUMsRUFBRTtJQUVoQyw2QkFBNkI7SUFDN0IsTUFBTVEsaUJBQWlCLE9BQU9DO1FBQzFCTixlQUFlTTtRQUNmRixlQUFlRyxPQUFPLEdBQUcsRUFBRTtRQUUzQixJQUFJO1lBRUEsNEJBQTRCO1lBQzVCLE1BQU1DLFVBQVMsTUFBTUMsVUFBVUMsWUFBWSxDQUFDQyxZQUFZLENBQUM7Z0JBQUVDLE9BQU87WUFBSztZQUV2RSw2REFBNkQ7WUFDN0QsTUFBTUMsVUFBVTtnQkFDWkMsVUFBVTtnQkFDVkMsb0JBQW9CO1lBQ3hCO1lBQ0FaLGlCQUFpQkksT0FBTyxHQUFHLElBQUlTLGNBQWNSLFNBQVFLO1lBR3JELHNCQUFzQjtZQUN0QlYsaUJBQWlCSSxPQUFPLENBQUNVLGVBQWUsR0FBRyxDQUFDQztnQkFDeEMsSUFBSUEsRUFBRUMsSUFBSSxDQUFDQyxJQUFJLEdBQUcsR0FBRztvQkFDakJoQixlQUFlRyxPQUFPLENBQUNjLElBQUksQ0FBQ0gsRUFBRUMsSUFBSTtnQkFDdEM7WUFDSjtZQUVBLDZDQUE2QztZQUM3Q2hCLGlCQUFpQkksT0FBTyxDQUFDZSxLQUFLLENBQUM7WUFDL0JwQixlQUFlO1FBQ25CLEVBQUUsT0FBT3FCLEtBQUs7WUFDVkMsUUFBUUMsS0FBSyxDQUFDLCtCQUErQkY7WUFDN0MsTUFBTUE7UUFDVjtJQUNKO0lBRUEsNEJBQTRCO0lBQzVCLE1BQU1HLGdCQUFnQjtRQUNsQixJQUFJQztRQUVKLHVCQUF1QjtRQUN2QixJQUFJeEIsaUJBQWlCSSxPQUFPLElBQUlOLGFBQWE7WUFFekMsd0JBQXdCO1lBQ3hCMEIsT0FBT3hCLGlCQUFpQkksT0FBTyxDQUFDcUIsTUFBTSxHQUFHO2dCQUNyQyxJQUFJO29CQUVBLHNCQUFzQjtvQkFDdEIsTUFBTUMsWUFBWSxJQUFJQyxLQUFLMUIsZUFBZUcsT0FBTyxFQUFFO3dCQUFFd0IsTUFBTTtvQkFBYTtvQkFDeEUsbURBQW1EO29CQUVuRCxvQ0FBb0M7b0JBRXBDLHdCQUF3QjtvQkFDeEJ2QixPQUFPd0IsU0FBUyxHQUFHQyxPQUFPLENBQUNDLENBQUFBO3dCQUN2QkEsTUFBTUMsSUFBSTt3QkFDVkQsTUFBTUUsT0FBTyxHQUFHO29CQUNwQjtvQkFFQSxPQUFPUDtnQkFDWCxFQUFFLE9BQU9YLEdBQUc7b0JBQ1JNLFFBQVFhLEdBQUcsQ0FBQyw4QkFBOEJuQjtvQkFDMUMsT0FBTztnQkFDWDtZQUNKO1lBRUEsaUJBQWlCO1lBQ2pCZixpQkFBaUJJLE9BQU8sQ0FBQzRCLElBQUk7WUFDN0JqQyxlQUFlO1lBRWZGLGVBQWU7WUFDZndCLFFBQVFhLEdBQUcsQ0FBQyxRQUFRVjtZQUNwQixPQUFPQTtRQUNYO1FBQ0EsT0FBTztJQUNYO0lBRUEsT0FBTztRQUNINUI7UUFDQUU7UUFDQUk7UUFDQXFCO0lBQ0o7QUFDSixFQUFFO0dBM0ZXNUIiLCJzb3VyY2VzIjpbIkM6XFxEZW5pc2VcXFByb2plY3RcXGdlbnZvaWNlLXN1cnZleXNcXGZyb250ZW5kXFxob29rc1xcdXNlQXVkaW9SZWNvcmRlci5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyB1c2VTdGF0ZSwgdXNlUmVmIH0gZnJvbSAncmVhY3QnO1xyXG5cclxuZXhwb3J0IGNvbnN0IHVzZUF1ZGlvUmVjb3JkZXIgPSAoKSA9PiB7XHJcblxyXG4gICAgLy8gU1RBVEVcclxuICAgIGNvbnN0IFtyZWNvcmRpbmdJZCwgc2V0UmVjb3JkaW5nSWRdID0gdXNlU3RhdGUobnVsbCk7XHJcbiAgICBjb25zdCBbaXNSZWNvcmRpbmcsIHNldElzUmVjb3JkaW5nXSA9IHVzZVN0YXRlKGZhbHNlKTtcclxuXHJcbiAgICAvL1JFRlxyXG4gICAgY29uc3QgbWVkaWFSZWNvcmRlclJlZiA9IHVzZVJlZihudWxsKTtcclxuICAgIGNvbnN0IGF1ZGlvQ2h1bmtzUmVmID0gdXNlUmVmKFtdKTtcclxuXHJcbiAgICAvLyBGdW5jdGlvbiA6IHN0YXJ0IHJlY29yZGluZ1xyXG4gICAgY29uc3Qgc3RhcnRSZWNvcmRpbmcgPSBhc3luYyAoaWQpID0+IHtcclxuICAgICAgICBzZXRSZWNvcmRpbmdJZChpZCk7XHJcbiAgICAgICAgYXVkaW9DaHVua3NSZWYuY3VycmVudCA9IFtdO1xyXG4gICAgICAgIFxyXG4gICAgICAgIHRyeSB7XHJcbiAgICAgICAgICAgIFxyXG4gICAgICAgICAgICAvLyByZXF1ZXN0IG1pY3JvcGhvbmUgYWNjZXNzXHJcbiAgICAgICAgICAgIGNvbnN0IHN0cmVhbSA9IGF3YWl0IG5hdmlnYXRvci5tZWRpYURldmljZXMuZ2V0VXNlck1lZGlhKHsgYXVkaW86IHRydWUgfSk7XHJcblxyXG4gICAgICAgICAgICAvLyBDcmVhdGUgTWVkaWFSZWNvcmRlciB3aXRoIG9wdGlvbnMgZm9yIGJldHRlciBjb21wYXRpYmlsaXR5XHJcbiAgICAgICAgICAgIGNvbnN0IG9wdGlvbnMgPSB7XHJcbiAgICAgICAgICAgICAgICBtaW1lVHlwZTogJ2F1ZGlvL3dlYm07Y29kZWNzPW9wdXMnLFxyXG4gICAgICAgICAgICAgICAgYXVkaW9CaXRzUGVyU2Vjb25kOiAxMjgwMDBcclxuICAgICAgICAgICAgfTtcclxuICAgICAgICAgICAgbWVkaWFSZWNvcmRlclJlZi5jdXJyZW50ID0gbmV3IE1lZGlhUmVjb3JkZXIoc3RyZWFtLCBvcHRpb25zKTtcclxuICAgICAgICBcclxuXHJcbiAgICAgICAgICAgIC8vIENvbGxlY3QgZGF0YSBjaHVua3NcclxuICAgICAgICAgICAgbWVkaWFSZWNvcmRlclJlZi5jdXJyZW50Lm9uZGF0YWF2YWlsYWJsZSA9IChlKSA9PiB7XHJcbiAgICAgICAgICAgICAgICBpZiAoZS5kYXRhLnNpemUgPiAwKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgYXVkaW9DaHVua3NSZWYuY3VycmVudC5wdXNoKGUuZGF0YSk7XHJcbiAgICAgICAgICAgICAgICB9ICAgXHJcbiAgICAgICAgICAgIH07XHJcblxyXG4gICAgICAgICAgICAvLyBSZWNvcmRpbmcgc3RhcnQgLSBjb2xsZWN0IGRhdGEgZXZlcnkgMTAwbXNcclxuICAgICAgICAgICAgbWVkaWFSZWNvcmRlclJlZi5jdXJyZW50LnN0YXJ0KDEwMCk7ICAgIFxyXG4gICAgICAgICAgICBzZXRJc1JlY29yZGluZyh0cnVlKTtcclxuICAgICAgICB9IGNhdGNoIChlcnIpIHtcclxuICAgICAgICAgICAgY29uc29sZS5lcnJvcignRXJyb3IgYWNjZXNzaW5nIG1pY3JvcGhvbmU6JywgZXJyKTtcclxuICAgICAgICAgICAgdGhyb3cgZXJyO1xyXG4gICAgICAgIH0gXHJcbiAgICB9O1xyXG5cclxuICAgIC8vIEZ1bmN0aW9uIDogU3RvcCByZWNvcmRpbmdcclxuICAgIGNvbnN0IHN0b3BSZWNvcmRpbmcgPSAoKSA9PiB7XHJcbiAgICAgICAgbGV0IGJsb2I7XHJcblxyXG4gICAgICAgIC8vIGlmIHJlY29yZGluZyBvbmdvaW5nXHJcbiAgICAgICAgaWYgKG1lZGlhUmVjb3JkZXJSZWYuY3VycmVudCAmJiBpc1JlY29yZGluZykge1xyXG5cclxuICAgICAgICAgICAgLy8gSGFuZGxlIHJlY29yZGluZyBzdG9wXHJcbiAgICAgICAgICAgIGJsb2IgPSBtZWRpYVJlY29yZGVyUmVmLmN1cnJlbnQub25zdG9wID0gKCkgPT4ge1xyXG4gICAgICAgICAgICAgICAgdHJ5IHtcclxuXHJcbiAgICAgICAgICAgICAgICAgICAgLy8gQ3JlYXRlIGJsb2IgYW5kIFVSTFxyXG4gICAgICAgICAgICAgICAgICAgIGNvbnN0IGF1ZGlvQmxvYiA9IG5ldyBCbG9iKGF1ZGlvQ2h1bmtzUmVmLmN1cnJlbnQsIHsgdHlwZTogJ2F1ZGlvL3dlYm0nIH0pO1xyXG4gICAgICAgICAgICAgICAgICAgIC8vIGNvbnN0IGF1ZGlvVXJsID0gVVJMLmNyZWF0ZU9iamVjdFVSTChhdWRpb0Jsb2IpO1xyXG5cclxuICAgICAgICAgICAgICAgICAgICAvLyBjb25zb2xlLmxvZyhhdWRpb0Jsb2IsIGF1ZGlvVXJsKTtcclxuXHJcbiAgICAgICAgICAgICAgICAgICAgLy8gQ2xlYW4gdXAgbWVkaWEgc3RyZWFtXHJcbiAgICAgICAgICAgICAgICAgICAgc3RyZWFtLmdldFRyYWNrcygpLmZvckVhY2godHJhY2sgPT4ge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICB0cmFjay5zdG9wKCk7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHRyYWNrLmVuYWJsZWQgPSBmYWxzZTtcclxuICAgICAgICAgICAgICAgICAgICB9KTtcclxuICAgICAgICAgICAgICAgICAgICBcclxuICAgICAgICAgICAgICAgICAgICByZXR1cm4gYXVkaW9CbG9iO1xyXG4gICAgICAgICAgICAgICAgfSBjYXRjaCAoZSkge1xyXG4gICAgICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKCdlcnJvciBjcmVhdGluZyBhdWRpbyB1cmw6ICcsIGUpO1xyXG4gICAgICAgICAgICAgICAgICAgIHJldHVybiBudWxsO1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB9O1xyXG4gICAgICAgICAgICBcclxuICAgICAgICAgICAgLy8gU3RvcCByZWNvcmRpbmdcclxuICAgICAgICAgICAgbWVkaWFSZWNvcmRlclJlZi5jdXJyZW50LnN0b3AoKTtcclxuICAgICAgICAgICAgc2V0SXNSZWNvcmRpbmcoZmFsc2UpO1xyXG5cclxuICAgICAgICAgICAgc2V0UmVjb3JkaW5nSWQobnVsbCk7XHJcbiAgICAgICAgICAgIGNvbnNvbGUubG9nKFwiYmxvYlwiLCBibG9iKVxyXG4gICAgICAgICAgICByZXR1cm4gYmxvYjtcclxuICAgICAgICB9XHJcbiAgICAgICAgcmV0dXJuIG51bGw7XHJcbiAgICB9O1xyXG5cclxuICAgIHJldHVybiB7XHJcbiAgICAgICAgcmVjb3JkaW5nSWQsXHJcbiAgICAgICAgaXNSZWNvcmRpbmcsXHJcbiAgICAgICAgc3RhcnRSZWNvcmRpbmcsXHJcbiAgICAgICAgc3RvcFJlY29yZGluZ1xyXG4gICAgfTtcclxufTsiXSwibmFtZXMiOlsidXNlU3RhdGUiLCJ1c2VSZWYiLCJ1c2VBdWRpb1JlY29yZGVyIiwicmVjb3JkaW5nSWQiLCJzZXRSZWNvcmRpbmdJZCIsImlzUmVjb3JkaW5nIiwic2V0SXNSZWNvcmRpbmciLCJtZWRpYVJlY29yZGVyUmVmIiwiYXVkaW9DaHVua3NSZWYiLCJzdGFydFJlY29yZGluZyIsImlkIiwiY3VycmVudCIsInN0cmVhbSIsIm5hdmlnYXRvciIsIm1lZGlhRGV2aWNlcyIsImdldFVzZXJNZWRpYSIsImF1ZGlvIiwib3B0aW9ucyIsIm1pbWVUeXBlIiwiYXVkaW9CaXRzUGVyU2Vjb25kIiwiTWVkaWFSZWNvcmRlciIsIm9uZGF0YWF2YWlsYWJsZSIsImUiLCJkYXRhIiwic2l6ZSIsInB1c2giLCJzdGFydCIsImVyciIsImNvbnNvbGUiLCJlcnJvciIsInN0b3BSZWNvcmRpbmciLCJibG9iIiwib25zdG9wIiwiYXVkaW9CbG9iIiwiQmxvYiIsInR5cGUiLCJnZXRUcmFja3MiLCJmb3JFYWNoIiwidHJhY2siLCJzdG9wIiwiZW5hYmxlZCIsImxvZyJdLCJpZ25vcmVMaXN0IjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(pages-dir-browser)/./hooks/useAudioRecorder.js\n"));

/***/ })

});