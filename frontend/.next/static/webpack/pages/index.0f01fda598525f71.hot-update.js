"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("pages/index",{

/***/ "(pages-dir-browser)/./hooks/useAudioRecorder.js":
/*!***********************************!*\
  !*** ./hooks/useAudioRecorder.js ***!
  \***********************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   useAudioRecorder: () => (/* binding */ useAudioRecorder)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"(pages-dir-browser)/./node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\nvar _s = $RefreshSig$();\n\nconst useAudioRecorder = ()=>{\n    _s();\n    // STATE\n    const [recordingId, setRecordingId] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(null);\n    const [isRecording, setIsRecording] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(false);\n    //REF\n    const mediaRecorderRef = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(null);\n    const audioChunksRef = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)([]);\n    // Function : start recording\n    const startRecording = async (id)=>{\n        setRecordingId(id);\n        audioChunksRef.current = [];\n        try {\n            // request microphone access\n            const stream1 = await navigator.mediaDevices.getUserMedia({\n                audio: true\n            });\n            // Create MediaRecorder with options for better compatibility\n            const options = {\n                mimeType: 'audio/webm;codecs=opus',\n                audioBitsPerSecond: 128000\n            };\n            mediaRecorderRef.current = new MediaRecorder(stream1, options);\n            // Data collection\n            mediaRecorderRef.current.ondataavailable = (e)=>{\n                if (e.data.size > 0) {\n                    audioChunksRef.current.push(e.data);\n                }\n            };\n            // Recording start - collect data every 100ms\n            mediaRecorderRef.current.start(100);\n            setIsRecording(true);\n        } catch (err) {\n            console.error('Error accessing microphone:', err);\n            throw err;\n        }\n    };\n    // Function : Stop recording\n    const stopRecording = ()=>{\n        let blob;\n        // if recording ongoing\n        if (mediaRecorderRef.current && isRecording) {\n            // Handle recording stop\n            blob = mediaRecorderRef.current.onstop = ()=>{\n                try {\n                    // Create blob and URL\n                    const audioBlob = new Blob(audioChunksRef.current, {\n                        type: 'audio/webm'\n                    });\n                    // const audioUrl = URL.createObjectURL(audioBlob);\n                    // console.log(audioBlob, audioUrl);\n                    // Clean up media stream\n                    stream.getTracks().forEach((track)=>{\n                        track.stop();\n                        track.enabled = false;\n                    });\n                    return audioBlob;\n                } catch (e) {\n                    console.log('error creating audio url: ', e);\n                    return null;\n                }\n            };\n            // Stop recording\n            mediaRecorderRef.current.stop();\n            setIsRecording(false);\n            setRecordingId(null);\n            console.log(\"blob\", blob);\n            return blob;\n        }\n    };\n    return {\n        recordingId,\n        isRecording,\n        startRecording,\n        stopRecording\n    };\n};\n_s(useAudioRecorder, \"/gaZyn3JuGdDh2mF+baZ5FJzQuI=\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHBhZ2VzLWRpci1icm93c2VyKS8uL2hvb2tzL3VzZUF1ZGlvUmVjb3JkZXIuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUF5QztBQUVsQyxNQUFNRSxtQkFBbUI7O0lBRTVCLFFBQVE7SUFDUixNQUFNLENBQUNDLGFBQWFDLGVBQWUsR0FBR0osK0NBQVFBLENBQUM7SUFDL0MsTUFBTSxDQUFDSyxhQUFhQyxlQUFlLEdBQUdOLCtDQUFRQSxDQUFDO0lBRS9DLEtBQUs7SUFDTCxNQUFNTyxtQkFBbUJOLDZDQUFNQSxDQUFDO0lBQ2hDLE1BQU1PLGlCQUFpQlAsNkNBQU1BLENBQUMsRUFBRTtJQUVoQyw2QkFBNkI7SUFDN0IsTUFBTVEsaUJBQWlCLE9BQU9DO1FBQzFCTixlQUFlTTtRQUNmRixlQUFlRyxPQUFPLEdBQUcsRUFBRTtRQUUzQixJQUFJO1lBRUEsNEJBQTRCO1lBQzVCLE1BQU1DLFVBQVMsTUFBTUMsVUFBVUMsWUFBWSxDQUFDQyxZQUFZLENBQUM7Z0JBQUVDLE9BQU87WUFBSztZQUV2RSw2REFBNkQ7WUFDN0QsTUFBTUMsVUFBVTtnQkFDWkMsVUFBVTtnQkFDVkMsb0JBQW9CO1lBQ3hCO1lBQ0FaLGlCQUFpQkksT0FBTyxHQUFHLElBQUlTLGNBQWNSLFNBQVFLO1lBR3JELGtCQUFrQjtZQUNsQlYsaUJBQWlCSSxPQUFPLENBQUNVLGVBQWUsR0FBRyxDQUFDQztnQkFDeEMsSUFBSUEsRUFBRUMsSUFBSSxDQUFDQyxJQUFJLEdBQUcsR0FBRztvQkFDakJoQixlQUFlRyxPQUFPLENBQUNjLElBQUksQ0FBQ0gsRUFBRUMsSUFBSTtnQkFDdEM7WUFDSjtZQUVBLDZDQUE2QztZQUM3Q2hCLGlCQUFpQkksT0FBTyxDQUFDZSxLQUFLLENBQUM7WUFDL0JwQixlQUFlO1FBQ25CLEVBQUUsT0FBT3FCLEtBQUs7WUFDVkMsUUFBUUMsS0FBSyxDQUFDLCtCQUErQkY7WUFDN0MsTUFBTUE7UUFDVjtJQUNKO0lBRUEsNEJBQTRCO0lBQzVCLE1BQU1HLGdCQUFnQjtRQUNsQixJQUFJQztRQUVKLHVCQUF1QjtRQUN2QixJQUFJeEIsaUJBQWlCSSxPQUFPLElBQUlOLGFBQWE7WUFFekMsd0JBQXdCO1lBQ3hCMEIsT0FBT3hCLGlCQUFpQkksT0FBTyxDQUFDcUIsTUFBTSxHQUFHO2dCQUNyQyxJQUFJO29CQUVBLHNCQUFzQjtvQkFDdEIsTUFBTUMsWUFBWSxJQUFJQyxLQUFLMUIsZUFBZUcsT0FBTyxFQUFFO3dCQUFFd0IsTUFBTTtvQkFBYTtvQkFDeEUsbURBQW1EO29CQUVuRCxvQ0FBb0M7b0JBRXBDLHdCQUF3QjtvQkFDeEJ2QixPQUFPd0IsU0FBUyxHQUFHQyxPQUFPLENBQUNDLENBQUFBO3dCQUN2QkEsTUFBTUMsSUFBSTt3QkFDVkQsTUFBTUUsT0FBTyxHQUFHO29CQUNwQjtvQkFFQSxPQUFPUDtnQkFDWCxFQUFFLE9BQU9YLEdBQUc7b0JBQ1JNLFFBQVFhLEdBQUcsQ0FBQyw4QkFBOEJuQjtvQkFDMUMsT0FBTztnQkFDWDtZQUNKO1lBRUEsaUJBQWlCO1lBQ2pCZixpQkFBaUJJLE9BQU8sQ0FBQzRCLElBQUk7WUFDN0JqQyxlQUFlO1lBRWZGLGVBQWU7WUFDZndCLFFBQVFhLEdBQUcsQ0FBQyxRQUFRVjtZQUNwQixPQUFPQTtRQUNYO0lBQ0o7SUFFQSxPQUFPO1FBQ0g1QjtRQUNBRTtRQUNBSTtRQUNBcUI7SUFDSjtBQUNKLEVBQUU7R0ExRlc1QiIsInNvdXJjZXMiOlsiQzpcXERlbmlzZVxcUHJvamVjdFxcZ2Vudm9pY2Utc3VydmV5c1xcZnJvbnRlbmRcXGhvb2tzXFx1c2VBdWRpb1JlY29yZGVyLmpzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IHVzZVN0YXRlLCB1c2VSZWYgfSBmcm9tICdyZWFjdCc7XHJcblxyXG5leHBvcnQgY29uc3QgdXNlQXVkaW9SZWNvcmRlciA9ICgpID0+IHtcclxuXHJcbiAgICAvLyBTVEFURVxyXG4gICAgY29uc3QgW3JlY29yZGluZ0lkLCBzZXRSZWNvcmRpbmdJZF0gPSB1c2VTdGF0ZShudWxsKTtcclxuICAgIGNvbnN0IFtpc1JlY29yZGluZywgc2V0SXNSZWNvcmRpbmddID0gdXNlU3RhdGUoZmFsc2UpO1xyXG5cclxuICAgIC8vUkVGXHJcbiAgICBjb25zdCBtZWRpYVJlY29yZGVyUmVmID0gdXNlUmVmKG51bGwpO1xyXG4gICAgY29uc3QgYXVkaW9DaHVua3NSZWYgPSB1c2VSZWYoW10pO1xyXG5cclxuICAgIC8vIEZ1bmN0aW9uIDogc3RhcnQgcmVjb3JkaW5nXHJcbiAgICBjb25zdCBzdGFydFJlY29yZGluZyA9IGFzeW5jIChpZCkgPT4ge1xyXG4gICAgICAgIHNldFJlY29yZGluZ0lkKGlkKTtcclxuICAgICAgICBhdWRpb0NodW5rc1JlZi5jdXJyZW50ID0gW107XHJcbiAgICAgICAgXHJcbiAgICAgICAgdHJ5IHtcclxuICAgICAgICAgICAgXHJcbiAgICAgICAgICAgIC8vIHJlcXVlc3QgbWljcm9waG9uZSBhY2Nlc3NcclxuICAgICAgICAgICAgY29uc3Qgc3RyZWFtID0gYXdhaXQgbmF2aWdhdG9yLm1lZGlhRGV2aWNlcy5nZXRVc2VyTWVkaWEoeyBhdWRpbzogdHJ1ZSB9KTtcclxuXHJcbiAgICAgICAgICAgIC8vIENyZWF0ZSBNZWRpYVJlY29yZGVyIHdpdGggb3B0aW9ucyBmb3IgYmV0dGVyIGNvbXBhdGliaWxpdHlcclxuICAgICAgICAgICAgY29uc3Qgb3B0aW9ucyA9IHtcclxuICAgICAgICAgICAgICAgIG1pbWVUeXBlOiAnYXVkaW8vd2VibTtjb2RlY3M9b3B1cycsXHJcbiAgICAgICAgICAgICAgICBhdWRpb0JpdHNQZXJTZWNvbmQ6IDEyODAwMFxyXG4gICAgICAgICAgICB9O1xyXG4gICAgICAgICAgICBtZWRpYVJlY29yZGVyUmVmLmN1cnJlbnQgPSBuZXcgTWVkaWFSZWNvcmRlcihzdHJlYW0sIG9wdGlvbnMpO1xyXG4gICAgICAgIFxyXG5cclxuICAgICAgICAgICAgLy8gRGF0YSBjb2xsZWN0aW9uXHJcbiAgICAgICAgICAgIG1lZGlhUmVjb3JkZXJSZWYuY3VycmVudC5vbmRhdGFhdmFpbGFibGUgPSAoZSkgPT4ge1xyXG4gICAgICAgICAgICAgICAgaWYgKGUuZGF0YS5zaXplID4gMCkge1xyXG4gICAgICAgICAgICAgICAgICAgIGF1ZGlvQ2h1bmtzUmVmLmN1cnJlbnQucHVzaChlLmRhdGEpO1xyXG4gICAgICAgICAgICAgICAgfSAgIFxyXG4gICAgICAgICAgICB9O1xyXG5cclxuICAgICAgICAgICAgLy8gUmVjb3JkaW5nIHN0YXJ0IC0gY29sbGVjdCBkYXRhIGV2ZXJ5IDEwMG1zXHJcbiAgICAgICAgICAgIG1lZGlhUmVjb3JkZXJSZWYuY3VycmVudC5zdGFydCgxMDApOyAgICBcclxuICAgICAgICAgICAgc2V0SXNSZWNvcmRpbmcodHJ1ZSk7XHJcbiAgICAgICAgfSBjYXRjaCAoZXJyKSB7XHJcbiAgICAgICAgICAgIGNvbnNvbGUuZXJyb3IoJ0Vycm9yIGFjY2Vzc2luZyBtaWNyb3Bob25lOicsIGVycik7XHJcbiAgICAgICAgICAgIHRocm93IGVycjtcclxuICAgICAgICB9IFxyXG4gICAgfTtcclxuXHJcbiAgICAvLyBGdW5jdGlvbiA6IFN0b3AgcmVjb3JkaW5nXHJcbiAgICBjb25zdCBzdG9wUmVjb3JkaW5nID0gKCkgPT4ge1xyXG4gICAgICAgIGxldCBibG9iO1xyXG5cclxuICAgICAgICAvLyBpZiByZWNvcmRpbmcgb25nb2luZ1xyXG4gICAgICAgIGlmIChtZWRpYVJlY29yZGVyUmVmLmN1cnJlbnQgJiYgaXNSZWNvcmRpbmcpIHtcclxuXHJcbiAgICAgICAgICAgIC8vIEhhbmRsZSByZWNvcmRpbmcgc3RvcFxyXG4gICAgICAgICAgICBibG9iID0gbWVkaWFSZWNvcmRlclJlZi5jdXJyZW50Lm9uc3RvcCA9ICgpID0+IHtcclxuICAgICAgICAgICAgICAgIHRyeSB7XHJcblxyXG4gICAgICAgICAgICAgICAgICAgIC8vIENyZWF0ZSBibG9iIGFuZCBVUkxcclxuICAgICAgICAgICAgICAgICAgICBjb25zdCBhdWRpb0Jsb2IgPSBuZXcgQmxvYihhdWRpb0NodW5rc1JlZi5jdXJyZW50LCB7IHR5cGU6ICdhdWRpby93ZWJtJyB9KTtcclxuICAgICAgICAgICAgICAgICAgICAvLyBjb25zdCBhdWRpb1VybCA9IFVSTC5jcmVhdGVPYmplY3RVUkwoYXVkaW9CbG9iKTtcclxuXHJcbiAgICAgICAgICAgICAgICAgICAgLy8gY29uc29sZS5sb2coYXVkaW9CbG9iLCBhdWRpb1VybCk7XHJcblxyXG4gICAgICAgICAgICAgICAgICAgIC8vIENsZWFuIHVwIG1lZGlhIHN0cmVhbVxyXG4gICAgICAgICAgICAgICAgICAgIHN0cmVhbS5nZXRUcmFja3MoKS5mb3JFYWNoKHRyYWNrID0+IHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgdHJhY2suc3RvcCgpO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICB0cmFjay5lbmFibGVkID0gZmFsc2U7XHJcbiAgICAgICAgICAgICAgICAgICAgfSk7XHJcbiAgICAgICAgICAgICAgICAgICAgXHJcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGF1ZGlvQmxvYjtcclxuICAgICAgICAgICAgICAgIH0gY2F0Y2ggKGUpIHtcclxuICAgICAgICAgICAgICAgICAgICBjb25zb2xlLmxvZygnZXJyb3IgY3JlYXRpbmcgYXVkaW8gdXJsOiAnLCBlKTtcclxuICAgICAgICAgICAgICAgICAgICByZXR1cm4gbnVsbDtcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgfTtcclxuICAgICAgICAgICAgXHJcbiAgICAgICAgICAgIC8vIFN0b3AgcmVjb3JkaW5nXHJcbiAgICAgICAgICAgIG1lZGlhUmVjb3JkZXJSZWYuY3VycmVudC5zdG9wKCk7XHJcbiAgICAgICAgICAgIHNldElzUmVjb3JkaW5nKGZhbHNlKTtcclxuXHJcbiAgICAgICAgICAgIHNldFJlY29yZGluZ0lkKG51bGwpO1xyXG4gICAgICAgICAgICBjb25zb2xlLmxvZyhcImJsb2JcIiwgYmxvYilcclxuICAgICAgICAgICAgcmV0dXJuIGJsb2I7XHJcbiAgICAgICAgfVxyXG4gICAgfTtcclxuXHJcbiAgICByZXR1cm4ge1xyXG4gICAgICAgIHJlY29yZGluZ0lkLFxyXG4gICAgICAgIGlzUmVjb3JkaW5nLFxyXG4gICAgICAgIHN0YXJ0UmVjb3JkaW5nLFxyXG4gICAgICAgIHN0b3BSZWNvcmRpbmdcclxuICAgIH07XHJcbn07Il0sIm5hbWVzIjpbInVzZVN0YXRlIiwidXNlUmVmIiwidXNlQXVkaW9SZWNvcmRlciIsInJlY29yZGluZ0lkIiwic2V0UmVjb3JkaW5nSWQiLCJpc1JlY29yZGluZyIsInNldElzUmVjb3JkaW5nIiwibWVkaWFSZWNvcmRlclJlZiIsImF1ZGlvQ2h1bmtzUmVmIiwic3RhcnRSZWNvcmRpbmciLCJpZCIsImN1cnJlbnQiLCJzdHJlYW0iLCJuYXZpZ2F0b3IiLCJtZWRpYURldmljZXMiLCJnZXRVc2VyTWVkaWEiLCJhdWRpbyIsIm9wdGlvbnMiLCJtaW1lVHlwZSIsImF1ZGlvQml0c1BlclNlY29uZCIsIk1lZGlhUmVjb3JkZXIiLCJvbmRhdGFhdmFpbGFibGUiLCJlIiwiZGF0YSIsInNpemUiLCJwdXNoIiwic3RhcnQiLCJlcnIiLCJjb25zb2xlIiwiZXJyb3IiLCJzdG9wUmVjb3JkaW5nIiwiYmxvYiIsIm9uc3RvcCIsImF1ZGlvQmxvYiIsIkJsb2IiLCJ0eXBlIiwiZ2V0VHJhY2tzIiwiZm9yRWFjaCIsInRyYWNrIiwic3RvcCIsImVuYWJsZWQiLCJsb2ciXSwiaWdub3JlTGlzdCI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(pages-dir-browser)/./hooks/useAudioRecorder.js\n"));

/***/ })

});